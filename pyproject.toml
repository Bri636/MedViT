[build-system]
requires = ["setuptools>=64.0", "setuptools_scm"]
build-backend = "setuptools.build_meta"

[project]
name = "medvit"
version = "0.1.0"
authors = [
    {name = "Brian Hsu", email = "bah4228@uchicago.edu"},
]
description = "Medical ViT for Image Classification"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
]
dependencies = [
    "aiohappyeyeballs==2.4.6",
    "aiohttp==3.11.12",
    "aiosignal==1.3.2",
    "annotated-types==0.7.0",
    "attrs==25.1.0",
    "certifi==2025.1.31",
    "chardet==4.0.0",
    "click==8.1.8",
    "contourpy==1.3.1",
    "cycler==0.12.1",
    "docker-pycreds==0.4.0",
    "einops==0.8.1",
    "filelock==3.17.0",
    "fire==0.7.0",
    "fonttools==4.56.0",
    "frozenlist==1.5.0",
    "fsspec==2025.2.0",
    "fvcore==0.1.5.post20221221",
    "gitdb==4.0.12",
    "GitPython==3.1.44",
    "huggingface-hub==0.28.1",
    "idna==2.10",
    "imageio==2.37.0",
    "iopath==0.1.10",
    "Jinja2==3.1.5",
    "joblib==1.4.2",
    "kiwisolver==1.4.8",
    "lazy_loader==0.4",
    "lightning==2.5.0.post0",
    "lightning-utilities==0.12.0",
    "MarkupSafe==3.0.2",
    "matplotlib==3.10.0",
    "medmnist==3.0.1",
    "mpmath==1.3.0",
    "multidict==6.1.0",
    "networkx==3.4.2",
    "numpy==2.2.3",
    "nvidia-cublas-cu12==12.4.5.8",
    "nvidia-cuda-cupti-cu12==12.4.127",
    "nvidia-cuda-nvrtc-cu12==12.4.127",
    "nvidia-cuda-runtime-cu12==12.4.127",
    "nvidia-cudnn-cu12==9.1.0.70",
    "nvidia-cufft-cu12==11.2.1.3",
    "nvidia-curand-cu12==10.3.5.147",
    "nvidia-cusolver-cu12==11.6.1.9",
    "nvidia-cusparse-cu12==12.3.1.170",
    "nvidia-cusparselt-cu12==0.6.2",
    "nvidia-nccl-cu12==2.21.5",
    "nvidia-nvjitlink-cu12==12.4.127",
    "nvidia-nvtx-cu12==12.4.127",
    "packaging==24.2",
    "pandas==2.2.3",
    "pillow==11.1.0",
    "platformdirs==4.3.6",
    "portalocker==3.1.1",
    "propcache==0.2.1",
    "protobuf==5.29.3",
    "psutil==7.0.0",
    "pydantic==2.10.6",
    "pydantic_core==2.27.2",
    "pyparsing==3.2.1",
    "python-dateutil==2.9.0.post0",
    "pytorch-lightning==2.5.0.post0",
    "pytorch-metric-learning==2.8.1",
    "pytz==2025.1",
    "PyYAML==6.0.2",
    "requests==2.25.1",
    "safetensors==0.5.2",
    "scikit-image==0.25.1",
    "scikit-learn==1.6.1",
    "scipy==1.15.1",
    "sentry-sdk==2.21.0",
    "setproctitle==1.3.4",
    "six==1.17.0",
    "smmap==5.0.2",
    "sympy==1.13.1",
    "tabulate==0.9.0",
    "termcolor==2.5.0",
    "threadpoolctl==3.5.0",
    "tifffile==2025.1.10",
    "timm==1.0.8",
    "torch==2.6.0",
    "torchattacks==3.5.1",
    "torchmetrics==1.6.1",
    "torchsummary==1.5.1",
    "torchvision==0.21.0",
    "tqdm==4.67.1",
    "triton==3.2.0",
    "typing_extensions==4.12.2",
    "tzdata==2025.1",
    "urllib3==1.26.20",
    "wandb==0.19.6",
    "yacs==0.1.8",
    "yarl==1.18.3"
]


[project.urls]
homepage = "https://github.com/Bri636/MedViT"
documentation = "https://github.com/Bri636/MedViT"
repository = "https://github.com/Bri636/MedViT"

[project.scripts]
medvit = "medvit.cli:main"

[project.optional-dependencies]
dev = [
    "covdefaults>=2.2",
    "coverage",
    "mypy",
    "pre-commit",
    "pytest",
    "pytest-cov",
    "ruff",
    "tox",
    "virtualenv",
    "types-PyYAML",
]
docs = [
    "black",
    "mkdocs-gen-files",
    "mkdocs-literate-nav",
    "mkdocs-material==9.4.7",
    "mkdocs-section-index",
    "mkdocstrings==0.23.0",
    "mkdocstrings-python==1.8.0",
    "mike",
]

[tool.codespell]
skip = """
.git,
.github,
__pycache__,
build,
dist,
.*egg-info
"""

[tool.coverage.run]
plugins = ["covdefaults"]
omit = ["examples"]

[tool.mypy]
python_version = "3.10"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = "testing.*"
allow_incomplete_defs = true
allow_untyped_defs = true

[[tool.mypy.overrides]]
module = "tests.*"
allow_incomplete_defs = true
allow_untyped_defs = true

[tool.ruff]
# See all rules here: https://beta.ruff.rs/docs/rules
select = [
    # pyflakes
    "F",
    # pycodestyle
    "E",
    # mccabe
    "C90",
    # isort
    "I",
    # pep8-naming
    "N",
    # pydocstyle
    "D",
    # pyupgrade
    "UP",
    # flake8-2020
    "YTT",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-commas
    "COM",
    # flake8-comprehensions
    "C4",
    # flake8-implicit-str-concat
    "ISC",
    # flake8-pytest-style
    "PT",
    # flake8-quotes
    "Q",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # PyLint
    "PL",
    # ruff-specific
    "RUF",
]
line-length = 79
extend-ignore = ["Q001"]
target-version = "py38"

[tool.ruff.flake8-pytest-style]
parametrize-values-type = "tuple"

[tool.ruff.flake8-quotes]
inline-quotes = "single"
multiline-quotes = "single"

[tool.ruff.format]
indent-style = "space"
quote-style = "single"

[tool.ruff.isort]
force-single-line = true
known-first-party = ["medvit", "test", "testing"]
order-by-type = false
required-imports = ["from __future__ import annotations"]

[tool.ruff.per-file-ignores]
"*/__init__.py" = ["F401"]
"*/*_test.py" = ["D10"]

[tool.ruff.pydocstyle]
convention = "numpy"

[tool.setuptools.packages.find]
exclude = ["tests*", "testing*"]
namespaces = false